{"ast":null,"code":"var _jsxFileName = \"/Users/danielcohen/scooter/front/src/pages/Users.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from '../api/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Users = () => {\n  _s();\n\n  const [users, setUsers] = useState(null);\n  const [errors, setErrors] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await axios.get('/users/all');\n        console.log(response.data);\n        setUsers(response.data);\n      } catch (error) {\n        //depends how error is returned, usually I use  a redux error reducer which holds an array of errors\n        setErrors(error);\n      }\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [errors && errors, users && !errors ? users.map((parking, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: parking.address\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 35\n    }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Loading Parking...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Users, \"8218blubqB130/or3Ob/ZesmPW0=\");\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/Users/danielcohen/scooter/front/src/pages/Users.jsx"],"names":["React","useEffect","useState","axios","Users","users","setUsers","errors","setErrors","fetchData","response","get","console","log","data","error","map","parking","i","address"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,cAAlB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,IAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeQ,SAAf,GAA2B;AACzB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,YAAV,CAAvB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;AACAR,QAAAA,QAAQ,CAACI,QAAQ,CAACI,IAAV,CAAR;AACD,OAJD,CAIE,OAAOC,KAAP,EAAc;AACd;AACAP,QAAAA,SAAS,CAACO,KAAD,CAAT;AACD;AACF;;AACDN,IAAAA,SAAS;AACV,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACE;AAAA,eACGF,MAAM,IAAIA,MADb,EAEGF,KAAK,IAAI,CAACE,MAAV,GACCF,KAAK,CAACW,GAAN,CAAU,CAACC,OAAD,EAAUC,CAAV,kBAAgB;AAAA,gBAAcD,OAAO,CAACE;AAAtB,OAAUD,CAAV;AAAA;AAAA;AAAA;AAAA,YAA1B,CADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA5BD;;GAAMd,K;;KAAAA,K;AA8BN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from '../api/index';\n\nconst Users = () => {\n  const [users, setUsers] = useState(null);\n  const [errors, setErrors] = useState(null);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await axios.get('/users/all');\n        console.log(response.data);\n        setUsers(response.data);\n      } catch (error) {\n        //depends how error is returned, usually I use  a redux error reducer which holds an array of errors\n        setErrors(error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      {errors && errors}\n      {users && !errors? (\n        users.map((parking, i) => <div key={i}>{parking.address}</div>)\n      ) : (\n        <span>Loading Parking...</span>\n      )}\n    </div>\n  );\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}
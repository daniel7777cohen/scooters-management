{"ast":null,"code":"var _jsxFileName = \"/Users/danielcohen/scooter/front/src/pages/Scooters.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from '../api/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Scooters = () => {\n  _s();\n\n  const [scootersList, setScootersList] = useState(null);\n  const [errors, setErrors] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await axios.get('/scooters/all');\n        console.log(response.data);\n        setScootersList(response.data);\n      } catch (error) {\n        //depends how error is returned, usually I use redux error reducer which renders an array of errors\n        setErrors(error);\n      }\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: scootersList ? scootersList.map(scooter => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: scooter._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 48\n    }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Loading Scooters...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 76\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 8\n  }, this);\n};\n\n_s(Scooters, \"75cFjU9h/a9pA/pymVEcgVp/96I=\");\n\n_c = Scooters;\nexport default Scooters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scooters\");","map":{"version":3,"sources":["/Users/danielcohen/scooter/front/src/pages/Scooters.jsx"],"names":["React","useEffect","useState","axios","Scooters","scootersList","setScootersList","errors","setErrors","fetchData","response","get","console","log","data","error","map","scooter","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,cAAlB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,IAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeQ,SAAf,GAA2B;AACzB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,eAAV,CAAvB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;AACAR,QAAAA,eAAe,CAACI,QAAQ,CAACI,IAAV,CAAf;AACD,OAJD,CAIE,OAAOC,KAAP,EAAc;AACd;AACAP,QAAAA,SAAS,CAACO,KAAD,CAAT;AACD;AACF;;AACDN,IAAAA,SAAS;AACV,GAZQ,EAYN,EAZM,CAAT;AAcF,sBAAO;AAAA,cACHJ,YAAY,GAAGA,YAAY,CAACW,GAAb,CAAkBC,OAAD,iBAAW;AAAA,gBAAMA,OAAO,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA,YAA5B,CAAH,gBAA2D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADpE;AAAA;AAAA;AAAA;AAAA,UAAP;AAGC,CArBD;;GAAMd,Q;;KAAAA,Q;AAuBN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from '../api/index';\n\nconst Scooters = () => {\n  const [scootersList, setScootersList] = useState(null);\n  const [errors, setErrors] = useState(null);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await axios.get('/scooters/all');\n        console.log(response.data);\n        setScootersList(response.data);\n      } catch (error) {\n        //depends how error is returned, usually I use redux error reducer which renders an array of errors\n        setErrors(error);\n      }\n    }\n    fetchData();\n  }, []);\n\nreturn <div>{\n    scootersList ? scootersList.map((scooter)=><div>{scooter._id}</div>) : <span>Loading Scooters...</span>\n    }</div>;\n};\n\nexport default Scooters;\n"]},"metadata":{},"sourceType":"module"}